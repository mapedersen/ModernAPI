/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DocsRouteImport } from './routes/docs'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DocsIndexRouteImport } from './routes/docs/index'
import { Route as DocsWelcomeRouteImport } from './routes/docs/welcome'
import { Route as DocsHandbookRouteImport } from './routes/docs/handbook'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as PathlessLayoutNestedLayoutRouteImport } from './routes/_pathlessLayout/_nested-layout'
import { Route as DocsToolsIndexRouteImport } from './routes/docs/tools/index'
import { Route as DocsReferenceIndexRouteImport } from './routes/docs/reference/index'
import { Route as DocsLearnIndexRouteImport } from './routes/docs/learn/index'
import { Route as DocsGuidesIndexRouteImport } from './routes/docs/guides/index'
import { Route as DocsToolsScaffoldingRouteImport } from './routes/docs/tools/scaffolding'
import { Route as DocsToolsMonitoringRouteImport } from './routes/docs/tools/monitoring'
import { Route as DocsToolsApiPlaygroundRouteImport } from './routes/docs/tools/api-playground'
import { Route as DocsReferenceStandardsRouteImport } from './routes/docs/reference/standards'
import { Route as DocsReferencePatternsRouteImport } from './routes/docs/reference/patterns'
import { Route as DocsReferenceConfigRouteImport } from './routes/docs/reference/config'
import { Route as DocsReferenceApiRouteImport } from './routes/docs/reference/api'
import { Route as DocsReferenceAdrRouteImport } from './routes/docs/reference/adr'
import { Route as DocsLearnTestingRouteImport } from './routes/docs/learn/testing'
import { Route as DocsLearnRestApiRouteImport } from './routes/docs/learn/rest-api'
import { Route as DocsLearnFrontendRouteImport } from './routes/docs/learn/frontend'
import { Route as DocsLearnDatabaseRouteImport } from './routes/docs/learn/database'
import { Route as DocsLearnCachingRouteImport } from './routes/docs/learn/caching'
import { Route as DocsLearnAuthenticationRouteImport } from './routes/docs/learn/authentication'
import { Route as DocsLearnArchitectureRouteImport } from './routes/docs/learn/architecture'
import { Route as DocsGuidesTroubleshootingRouteImport } from './routes/docs/guides/troubleshooting'
import { Route as DocsGuidesTestingRouteImport } from './routes/docs/guides/testing'
import { Route as DocsGuidesMigrationsRouteImport } from './routes/docs/guides/migrations'
import { Route as DocsGuidesGitWorkflowRouteImport } from './routes/docs/guides/git-workflow'
import { Route as DocsGuidesDeploymentRouteImport } from './routes/docs/guides/deployment'
import { Route as DocsGuidesCustomizationRouteImport } from './routes/docs/guides/customization'
import { Route as DocsGuidesAddEntityRouteImport } from './routes/docs/guides/add-entity'
import { Route as DocsGuidesAddEndpointRouteImport } from './routes/docs/guides/add-endpoint'
import { Route as PathlessLayoutNestedLayoutRouteBRouteImport } from './routes/_pathlessLayout/_nested-layout/route-b'
import { Route as PathlessLayoutNestedLayoutRouteARouteImport } from './routes/_pathlessLayout/_nested-layout/route-a'
import { ServerRoute as ApiUsersServerRouteImport } from './routes/api/users'
import { ServerRoute as ApiUsersUserIdServerRouteImport } from './routes/api/users.$userId'

const rootServerRouteImport = createServerRootRoute()

const DocsRoute = DocsRouteImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsIndexRoute = DocsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DocsRoute,
} as any)
const DocsWelcomeRoute = DocsWelcomeRouteImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => DocsRoute,
} as any)
const DocsHandbookRoute = DocsHandbookRouteImport.update({
  id: '/handbook',
  path: '/handbook',
  getParentRoute: () => DocsRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutNestedLayoutRoute =
  PathlessLayoutNestedLayoutRouteImport.update({
    id: '/_pathlessLayout/_nested-layout',
    getParentRoute: () => rootRouteImport,
  } as any)
const DocsToolsIndexRoute = DocsToolsIndexRouteImport.update({
  id: '/tools/',
  path: '/tools/',
  getParentRoute: () => DocsRoute,
} as any)
const DocsReferenceIndexRoute = DocsReferenceIndexRouteImport.update({
  id: '/reference/',
  path: '/reference/',
  getParentRoute: () => DocsRoute,
} as any)
const DocsLearnIndexRoute = DocsLearnIndexRouteImport.update({
  id: '/learn/',
  path: '/learn/',
  getParentRoute: () => DocsRoute,
} as any)
const DocsGuidesIndexRoute = DocsGuidesIndexRouteImport.update({
  id: '/guides/',
  path: '/guides/',
  getParentRoute: () => DocsRoute,
} as any)
const DocsToolsScaffoldingRoute = DocsToolsScaffoldingRouteImport.update({
  id: '/tools/scaffolding',
  path: '/tools/scaffolding',
  getParentRoute: () => DocsRoute,
} as any)
const DocsToolsMonitoringRoute = DocsToolsMonitoringRouteImport.update({
  id: '/tools/monitoring',
  path: '/tools/monitoring',
  getParentRoute: () => DocsRoute,
} as any)
const DocsToolsApiPlaygroundRoute = DocsToolsApiPlaygroundRouteImport.update({
  id: '/tools/api-playground',
  path: '/tools/api-playground',
  getParentRoute: () => DocsRoute,
} as any)
const DocsReferenceStandardsRoute = DocsReferenceStandardsRouteImport.update({
  id: '/reference/standards',
  path: '/reference/standards',
  getParentRoute: () => DocsRoute,
} as any)
const DocsReferencePatternsRoute = DocsReferencePatternsRouteImport.update({
  id: '/reference/patterns',
  path: '/reference/patterns',
  getParentRoute: () => DocsRoute,
} as any)
const DocsReferenceConfigRoute = DocsReferenceConfigRouteImport.update({
  id: '/reference/config',
  path: '/reference/config',
  getParentRoute: () => DocsRoute,
} as any)
const DocsReferenceApiRoute = DocsReferenceApiRouteImport.update({
  id: '/reference/api',
  path: '/reference/api',
  getParentRoute: () => DocsRoute,
} as any)
const DocsReferenceAdrRoute = DocsReferenceAdrRouteImport.update({
  id: '/reference/adr',
  path: '/reference/adr',
  getParentRoute: () => DocsRoute,
} as any)
const DocsLearnTestingRoute = DocsLearnTestingRouteImport.update({
  id: '/learn/testing',
  path: '/learn/testing',
  getParentRoute: () => DocsRoute,
} as any)
const DocsLearnRestApiRoute = DocsLearnRestApiRouteImport.update({
  id: '/learn/rest-api',
  path: '/learn/rest-api',
  getParentRoute: () => DocsRoute,
} as any)
const DocsLearnFrontendRoute = DocsLearnFrontendRouteImport.update({
  id: '/learn/frontend',
  path: '/learn/frontend',
  getParentRoute: () => DocsRoute,
} as any)
const DocsLearnDatabaseRoute = DocsLearnDatabaseRouteImport.update({
  id: '/learn/database',
  path: '/learn/database',
  getParentRoute: () => DocsRoute,
} as any)
const DocsLearnCachingRoute = DocsLearnCachingRouteImport.update({
  id: '/learn/caching',
  path: '/learn/caching',
  getParentRoute: () => DocsRoute,
} as any)
const DocsLearnAuthenticationRoute = DocsLearnAuthenticationRouteImport.update({
  id: '/learn/authentication',
  path: '/learn/authentication',
  getParentRoute: () => DocsRoute,
} as any)
const DocsLearnArchitectureRoute = DocsLearnArchitectureRouteImport.update({
  id: '/learn/architecture',
  path: '/learn/architecture',
  getParentRoute: () => DocsRoute,
} as any)
const DocsGuidesTroubleshootingRoute =
  DocsGuidesTroubleshootingRouteImport.update({
    id: '/guides/troubleshooting',
    path: '/guides/troubleshooting',
    getParentRoute: () => DocsRoute,
  } as any)
const DocsGuidesTestingRoute = DocsGuidesTestingRouteImport.update({
  id: '/guides/testing',
  path: '/guides/testing',
  getParentRoute: () => DocsRoute,
} as any)
const DocsGuidesMigrationsRoute = DocsGuidesMigrationsRouteImport.update({
  id: '/guides/migrations',
  path: '/guides/migrations',
  getParentRoute: () => DocsRoute,
} as any)
const DocsGuidesGitWorkflowRoute = DocsGuidesGitWorkflowRouteImport.update({
  id: '/guides/git-workflow',
  path: '/guides/git-workflow',
  getParentRoute: () => DocsRoute,
} as any)
const DocsGuidesDeploymentRoute = DocsGuidesDeploymentRouteImport.update({
  id: '/guides/deployment',
  path: '/guides/deployment',
  getParentRoute: () => DocsRoute,
} as any)
const DocsGuidesCustomizationRoute = DocsGuidesCustomizationRouteImport.update({
  id: '/guides/customization',
  path: '/guides/customization',
  getParentRoute: () => DocsRoute,
} as any)
const DocsGuidesAddEntityRoute = DocsGuidesAddEntityRouteImport.update({
  id: '/guides/add-entity',
  path: '/guides/add-entity',
  getParentRoute: () => DocsRoute,
} as any)
const DocsGuidesAddEndpointRoute = DocsGuidesAddEndpointRouteImport.update({
  id: '/guides/add-endpoint',
  path: '/guides/add-endpoint',
  getParentRoute: () => DocsRoute,
} as any)
const PathlessLayoutNestedLayoutRouteBRoute =
  PathlessLayoutNestedLayoutRouteBRouteImport.update({
    id: '/route-b',
    path: '/route-b',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)
const PathlessLayoutNestedLayoutRouteARoute =
  PathlessLayoutNestedLayoutRouteARouteImport.update({
    id: '/route-a',
    path: '/route-a',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)
const ApiUsersServerRoute = ApiUsersServerRouteImport.update({
  id: '/api/users',
  path: '/api/users',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersUserIdServerRoute = ApiUsersUserIdServerRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => ApiUsersServerRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/docs': typeof DocsRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/docs/handbook': typeof DocsHandbookRoute
  '/docs/welcome': typeof DocsWelcomeRoute
  '/docs/': typeof DocsIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/docs/guides/add-endpoint': typeof DocsGuidesAddEndpointRoute
  '/docs/guides/add-entity': typeof DocsGuidesAddEntityRoute
  '/docs/guides/customization': typeof DocsGuidesCustomizationRoute
  '/docs/guides/deployment': typeof DocsGuidesDeploymentRoute
  '/docs/guides/git-workflow': typeof DocsGuidesGitWorkflowRoute
  '/docs/guides/migrations': typeof DocsGuidesMigrationsRoute
  '/docs/guides/testing': typeof DocsGuidesTestingRoute
  '/docs/guides/troubleshooting': typeof DocsGuidesTroubleshootingRoute
  '/docs/learn/architecture': typeof DocsLearnArchitectureRoute
  '/docs/learn/authentication': typeof DocsLearnAuthenticationRoute
  '/docs/learn/caching': typeof DocsLearnCachingRoute
  '/docs/learn/database': typeof DocsLearnDatabaseRoute
  '/docs/learn/frontend': typeof DocsLearnFrontendRoute
  '/docs/learn/rest-api': typeof DocsLearnRestApiRoute
  '/docs/learn/testing': typeof DocsLearnTestingRoute
  '/docs/reference/adr': typeof DocsReferenceAdrRoute
  '/docs/reference/api': typeof DocsReferenceApiRoute
  '/docs/reference/config': typeof DocsReferenceConfigRoute
  '/docs/reference/patterns': typeof DocsReferencePatternsRoute
  '/docs/reference/standards': typeof DocsReferenceStandardsRoute
  '/docs/tools/api-playground': typeof DocsToolsApiPlaygroundRoute
  '/docs/tools/monitoring': typeof DocsToolsMonitoringRoute
  '/docs/tools/scaffolding': typeof DocsToolsScaffoldingRoute
  '/docs/guides': typeof DocsGuidesIndexRoute
  '/docs/learn': typeof DocsLearnIndexRoute
  '/docs/reference': typeof DocsReferenceIndexRoute
  '/docs/tools': typeof DocsToolsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/docs/handbook': typeof DocsHandbookRoute
  '/docs/welcome': typeof DocsWelcomeRoute
  '/docs': typeof DocsIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/docs/guides/add-endpoint': typeof DocsGuidesAddEndpointRoute
  '/docs/guides/add-entity': typeof DocsGuidesAddEntityRoute
  '/docs/guides/customization': typeof DocsGuidesCustomizationRoute
  '/docs/guides/deployment': typeof DocsGuidesDeploymentRoute
  '/docs/guides/git-workflow': typeof DocsGuidesGitWorkflowRoute
  '/docs/guides/migrations': typeof DocsGuidesMigrationsRoute
  '/docs/guides/testing': typeof DocsGuidesTestingRoute
  '/docs/guides/troubleshooting': typeof DocsGuidesTroubleshootingRoute
  '/docs/learn/architecture': typeof DocsLearnArchitectureRoute
  '/docs/learn/authentication': typeof DocsLearnAuthenticationRoute
  '/docs/learn/caching': typeof DocsLearnCachingRoute
  '/docs/learn/database': typeof DocsLearnDatabaseRoute
  '/docs/learn/frontend': typeof DocsLearnFrontendRoute
  '/docs/learn/rest-api': typeof DocsLearnRestApiRoute
  '/docs/learn/testing': typeof DocsLearnTestingRoute
  '/docs/reference/adr': typeof DocsReferenceAdrRoute
  '/docs/reference/api': typeof DocsReferenceApiRoute
  '/docs/reference/config': typeof DocsReferenceConfigRoute
  '/docs/reference/patterns': typeof DocsReferencePatternsRoute
  '/docs/reference/standards': typeof DocsReferenceStandardsRoute
  '/docs/tools/api-playground': typeof DocsToolsApiPlaygroundRoute
  '/docs/tools/monitoring': typeof DocsToolsMonitoringRoute
  '/docs/tools/scaffolding': typeof DocsToolsScaffoldingRoute
  '/docs/guides': typeof DocsGuidesIndexRoute
  '/docs/learn': typeof DocsLearnIndexRoute
  '/docs/reference': typeof DocsReferenceIndexRoute
  '/docs/tools': typeof DocsToolsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/docs': typeof DocsRouteWithChildren
  '/_pathlessLayout/_nested-layout': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/docs/handbook': typeof DocsHandbookRoute
  '/docs/welcome': typeof DocsWelcomeRoute
  '/docs/': typeof DocsIndexRoute
  '/_pathlessLayout/_nested-layout/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/_pathlessLayout/_nested-layout/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/docs/guides/add-endpoint': typeof DocsGuidesAddEndpointRoute
  '/docs/guides/add-entity': typeof DocsGuidesAddEntityRoute
  '/docs/guides/customization': typeof DocsGuidesCustomizationRoute
  '/docs/guides/deployment': typeof DocsGuidesDeploymentRoute
  '/docs/guides/git-workflow': typeof DocsGuidesGitWorkflowRoute
  '/docs/guides/migrations': typeof DocsGuidesMigrationsRoute
  '/docs/guides/testing': typeof DocsGuidesTestingRoute
  '/docs/guides/troubleshooting': typeof DocsGuidesTroubleshootingRoute
  '/docs/learn/architecture': typeof DocsLearnArchitectureRoute
  '/docs/learn/authentication': typeof DocsLearnAuthenticationRoute
  '/docs/learn/caching': typeof DocsLearnCachingRoute
  '/docs/learn/database': typeof DocsLearnDatabaseRoute
  '/docs/learn/frontend': typeof DocsLearnFrontendRoute
  '/docs/learn/rest-api': typeof DocsLearnRestApiRoute
  '/docs/learn/testing': typeof DocsLearnTestingRoute
  '/docs/reference/adr': typeof DocsReferenceAdrRoute
  '/docs/reference/api': typeof DocsReferenceApiRoute
  '/docs/reference/config': typeof DocsReferenceConfigRoute
  '/docs/reference/patterns': typeof DocsReferencePatternsRoute
  '/docs/reference/standards': typeof DocsReferenceStandardsRoute
  '/docs/tools/api-playground': typeof DocsToolsApiPlaygroundRoute
  '/docs/tools/monitoring': typeof DocsToolsMonitoringRoute
  '/docs/tools/scaffolding': typeof DocsToolsScaffoldingRoute
  '/docs/guides/': typeof DocsGuidesIndexRoute
  '/docs/learn/': typeof DocsLearnIndexRoute
  '/docs/reference/': typeof DocsReferenceIndexRoute
  '/docs/tools/': typeof DocsToolsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/docs'
    | '/auth/login'
    | '/docs/handbook'
    | '/docs/welcome'
    | '/docs/'
    | '/route-a'
    | '/route-b'
    | '/docs/guides/add-endpoint'
    | '/docs/guides/add-entity'
    | '/docs/guides/customization'
    | '/docs/guides/deployment'
    | '/docs/guides/git-workflow'
    | '/docs/guides/migrations'
    | '/docs/guides/testing'
    | '/docs/guides/troubleshooting'
    | '/docs/learn/architecture'
    | '/docs/learn/authentication'
    | '/docs/learn/caching'
    | '/docs/learn/database'
    | '/docs/learn/frontend'
    | '/docs/learn/rest-api'
    | '/docs/learn/testing'
    | '/docs/reference/adr'
    | '/docs/reference/api'
    | '/docs/reference/config'
    | '/docs/reference/patterns'
    | '/docs/reference/standards'
    | '/docs/tools/api-playground'
    | '/docs/tools/monitoring'
    | '/docs/tools/scaffolding'
    | '/docs/guides'
    | '/docs/learn'
    | '/docs/reference'
    | '/docs/tools'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/docs/handbook'
    | '/docs/welcome'
    | '/docs'
    | '/route-a'
    | '/route-b'
    | '/docs/guides/add-endpoint'
    | '/docs/guides/add-entity'
    | '/docs/guides/customization'
    | '/docs/guides/deployment'
    | '/docs/guides/git-workflow'
    | '/docs/guides/migrations'
    | '/docs/guides/testing'
    | '/docs/guides/troubleshooting'
    | '/docs/learn/architecture'
    | '/docs/learn/authentication'
    | '/docs/learn/caching'
    | '/docs/learn/database'
    | '/docs/learn/frontend'
    | '/docs/learn/rest-api'
    | '/docs/learn/testing'
    | '/docs/reference/adr'
    | '/docs/reference/api'
    | '/docs/reference/config'
    | '/docs/reference/patterns'
    | '/docs/reference/standards'
    | '/docs/tools/api-playground'
    | '/docs/tools/monitoring'
    | '/docs/tools/scaffolding'
    | '/docs/guides'
    | '/docs/learn'
    | '/docs/reference'
    | '/docs/tools'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/docs'
    | '/_pathlessLayout/_nested-layout'
    | '/auth/login'
    | '/docs/handbook'
    | '/docs/welcome'
    | '/docs/'
    | '/_pathlessLayout/_nested-layout/route-a'
    | '/_pathlessLayout/_nested-layout/route-b'
    | '/docs/guides/add-endpoint'
    | '/docs/guides/add-entity'
    | '/docs/guides/customization'
    | '/docs/guides/deployment'
    | '/docs/guides/git-workflow'
    | '/docs/guides/migrations'
    | '/docs/guides/testing'
    | '/docs/guides/troubleshooting'
    | '/docs/learn/architecture'
    | '/docs/learn/authentication'
    | '/docs/learn/caching'
    | '/docs/learn/database'
    | '/docs/learn/frontend'
    | '/docs/learn/rest-api'
    | '/docs/learn/testing'
    | '/docs/reference/adr'
    | '/docs/reference/api'
    | '/docs/reference/config'
    | '/docs/reference/patterns'
    | '/docs/reference/standards'
    | '/docs/tools/api-playground'
    | '/docs/tools/monitoring'
    | '/docs/tools/scaffolding'
    | '/docs/guides/'
    | '/docs/learn/'
    | '/docs/reference/'
    | '/docs/tools/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  DocsRoute: typeof DocsRouteWithChildren
  PathlessLayoutNestedLayoutRoute: typeof PathlessLayoutNestedLayoutRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}
export interface FileServerRoutesByFullPath {
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesByTo {
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/users' | '/api/users/$userId'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/users' | '/api/users/$userId'
  id: '__root__' | '/api/users' | '/api/users/$userId'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiUsersServerRoute: typeof ApiUsersServerRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/': {
      id: '/docs/'
      path: '/'
      fullPath: '/docs/'
      preLoaderRoute: typeof DocsIndexRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/welcome': {
      id: '/docs/welcome'
      path: '/welcome'
      fullPath: '/docs/welcome'
      preLoaderRoute: typeof DocsWelcomeRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/handbook': {
      id: '/docs/handbook'
      path: '/handbook'
      fullPath: '/docs/handbook'
      preLoaderRoute: typeof DocsHandbookRouteImport
      parentRoute: typeof DocsRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/_nested-layout': {
      id: '/_pathlessLayout/_nested-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/tools/': {
      id: '/docs/tools/'
      path: '/tools'
      fullPath: '/docs/tools'
      preLoaderRoute: typeof DocsToolsIndexRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/reference/': {
      id: '/docs/reference/'
      path: '/reference'
      fullPath: '/docs/reference'
      preLoaderRoute: typeof DocsReferenceIndexRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/learn/': {
      id: '/docs/learn/'
      path: '/learn'
      fullPath: '/docs/learn'
      preLoaderRoute: typeof DocsLearnIndexRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/guides/': {
      id: '/docs/guides/'
      path: '/guides'
      fullPath: '/docs/guides'
      preLoaderRoute: typeof DocsGuidesIndexRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/tools/scaffolding': {
      id: '/docs/tools/scaffolding'
      path: '/tools/scaffolding'
      fullPath: '/docs/tools/scaffolding'
      preLoaderRoute: typeof DocsToolsScaffoldingRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/tools/monitoring': {
      id: '/docs/tools/monitoring'
      path: '/tools/monitoring'
      fullPath: '/docs/tools/monitoring'
      preLoaderRoute: typeof DocsToolsMonitoringRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/tools/api-playground': {
      id: '/docs/tools/api-playground'
      path: '/tools/api-playground'
      fullPath: '/docs/tools/api-playground'
      preLoaderRoute: typeof DocsToolsApiPlaygroundRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/reference/standards': {
      id: '/docs/reference/standards'
      path: '/reference/standards'
      fullPath: '/docs/reference/standards'
      preLoaderRoute: typeof DocsReferenceStandardsRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/reference/patterns': {
      id: '/docs/reference/patterns'
      path: '/reference/patterns'
      fullPath: '/docs/reference/patterns'
      preLoaderRoute: typeof DocsReferencePatternsRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/reference/config': {
      id: '/docs/reference/config'
      path: '/reference/config'
      fullPath: '/docs/reference/config'
      preLoaderRoute: typeof DocsReferenceConfigRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/reference/api': {
      id: '/docs/reference/api'
      path: '/reference/api'
      fullPath: '/docs/reference/api'
      preLoaderRoute: typeof DocsReferenceApiRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/reference/adr': {
      id: '/docs/reference/adr'
      path: '/reference/adr'
      fullPath: '/docs/reference/adr'
      preLoaderRoute: typeof DocsReferenceAdrRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/learn/testing': {
      id: '/docs/learn/testing'
      path: '/learn/testing'
      fullPath: '/docs/learn/testing'
      preLoaderRoute: typeof DocsLearnTestingRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/learn/rest-api': {
      id: '/docs/learn/rest-api'
      path: '/learn/rest-api'
      fullPath: '/docs/learn/rest-api'
      preLoaderRoute: typeof DocsLearnRestApiRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/learn/frontend': {
      id: '/docs/learn/frontend'
      path: '/learn/frontend'
      fullPath: '/docs/learn/frontend'
      preLoaderRoute: typeof DocsLearnFrontendRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/learn/database': {
      id: '/docs/learn/database'
      path: '/learn/database'
      fullPath: '/docs/learn/database'
      preLoaderRoute: typeof DocsLearnDatabaseRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/learn/caching': {
      id: '/docs/learn/caching'
      path: '/learn/caching'
      fullPath: '/docs/learn/caching'
      preLoaderRoute: typeof DocsLearnCachingRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/learn/authentication': {
      id: '/docs/learn/authentication'
      path: '/learn/authentication'
      fullPath: '/docs/learn/authentication'
      preLoaderRoute: typeof DocsLearnAuthenticationRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/learn/architecture': {
      id: '/docs/learn/architecture'
      path: '/learn/architecture'
      fullPath: '/docs/learn/architecture'
      preLoaderRoute: typeof DocsLearnArchitectureRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/guides/troubleshooting': {
      id: '/docs/guides/troubleshooting'
      path: '/guides/troubleshooting'
      fullPath: '/docs/guides/troubleshooting'
      preLoaderRoute: typeof DocsGuidesTroubleshootingRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/guides/testing': {
      id: '/docs/guides/testing'
      path: '/guides/testing'
      fullPath: '/docs/guides/testing'
      preLoaderRoute: typeof DocsGuidesTestingRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/guides/migrations': {
      id: '/docs/guides/migrations'
      path: '/guides/migrations'
      fullPath: '/docs/guides/migrations'
      preLoaderRoute: typeof DocsGuidesMigrationsRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/guides/git-workflow': {
      id: '/docs/guides/git-workflow'
      path: '/guides/git-workflow'
      fullPath: '/docs/guides/git-workflow'
      preLoaderRoute: typeof DocsGuidesGitWorkflowRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/guides/deployment': {
      id: '/docs/guides/deployment'
      path: '/guides/deployment'
      fullPath: '/docs/guides/deployment'
      preLoaderRoute: typeof DocsGuidesDeploymentRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/guides/customization': {
      id: '/docs/guides/customization'
      path: '/guides/customization'
      fullPath: '/docs/guides/customization'
      preLoaderRoute: typeof DocsGuidesCustomizationRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/guides/add-entity': {
      id: '/docs/guides/add-entity'
      path: '/guides/add-entity'
      fullPath: '/docs/guides/add-entity'
      preLoaderRoute: typeof DocsGuidesAddEntityRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/guides/add-endpoint': {
      id: '/docs/guides/add-endpoint'
      path: '/guides/add-endpoint'
      fullPath: '/docs/guides/add-endpoint'
      preLoaderRoute: typeof DocsGuidesAddEndpointRouteImport
      parentRoute: typeof DocsRoute
    }
    '/_pathlessLayout/_nested-layout/route-b': {
      id: '/_pathlessLayout/_nested-layout/route-b'
      path: '/route-b'
      fullPath: '/route-b'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteBRouteImport
      parentRoute: typeof PathlessLayoutNestedLayoutRoute
    }
    '/_pathlessLayout/_nested-layout/route-a': {
      id: '/_pathlessLayout/_nested-layout/route-a'
      path: '/route-a'
      fullPath: '/route-a'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteARouteImport
      parentRoute: typeof PathlessLayoutNestedLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/users': {
      id: '/api/users'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/$userId': {
      id: '/api/users/$userId'
      path: '/$userId'
      fullPath: '/api/users/$userId'
      preLoaderRoute: typeof ApiUsersUserIdServerRouteImport
      parentRoute: typeof ApiUsersServerRoute
    }
  }
}

interface DocsRouteChildren {
  DocsHandbookRoute: typeof DocsHandbookRoute
  DocsWelcomeRoute: typeof DocsWelcomeRoute
  DocsIndexRoute: typeof DocsIndexRoute
  DocsGuidesAddEndpointRoute: typeof DocsGuidesAddEndpointRoute
  DocsGuidesAddEntityRoute: typeof DocsGuidesAddEntityRoute
  DocsGuidesCustomizationRoute: typeof DocsGuidesCustomizationRoute
  DocsGuidesDeploymentRoute: typeof DocsGuidesDeploymentRoute
  DocsGuidesGitWorkflowRoute: typeof DocsGuidesGitWorkflowRoute
  DocsGuidesMigrationsRoute: typeof DocsGuidesMigrationsRoute
  DocsGuidesTestingRoute: typeof DocsGuidesTestingRoute
  DocsGuidesTroubleshootingRoute: typeof DocsGuidesTroubleshootingRoute
  DocsLearnArchitectureRoute: typeof DocsLearnArchitectureRoute
  DocsLearnAuthenticationRoute: typeof DocsLearnAuthenticationRoute
  DocsLearnCachingRoute: typeof DocsLearnCachingRoute
  DocsLearnDatabaseRoute: typeof DocsLearnDatabaseRoute
  DocsLearnFrontendRoute: typeof DocsLearnFrontendRoute
  DocsLearnRestApiRoute: typeof DocsLearnRestApiRoute
  DocsLearnTestingRoute: typeof DocsLearnTestingRoute
  DocsReferenceAdrRoute: typeof DocsReferenceAdrRoute
  DocsReferenceApiRoute: typeof DocsReferenceApiRoute
  DocsReferenceConfigRoute: typeof DocsReferenceConfigRoute
  DocsReferencePatternsRoute: typeof DocsReferencePatternsRoute
  DocsReferenceStandardsRoute: typeof DocsReferenceStandardsRoute
  DocsToolsApiPlaygroundRoute: typeof DocsToolsApiPlaygroundRoute
  DocsToolsMonitoringRoute: typeof DocsToolsMonitoringRoute
  DocsToolsScaffoldingRoute: typeof DocsToolsScaffoldingRoute
  DocsGuidesIndexRoute: typeof DocsGuidesIndexRoute
  DocsLearnIndexRoute: typeof DocsLearnIndexRoute
  DocsReferenceIndexRoute: typeof DocsReferenceIndexRoute
  DocsToolsIndexRoute: typeof DocsToolsIndexRoute
}

const DocsRouteChildren: DocsRouteChildren = {
  DocsHandbookRoute: DocsHandbookRoute,
  DocsWelcomeRoute: DocsWelcomeRoute,
  DocsIndexRoute: DocsIndexRoute,
  DocsGuidesAddEndpointRoute: DocsGuidesAddEndpointRoute,
  DocsGuidesAddEntityRoute: DocsGuidesAddEntityRoute,
  DocsGuidesCustomizationRoute: DocsGuidesCustomizationRoute,
  DocsGuidesDeploymentRoute: DocsGuidesDeploymentRoute,
  DocsGuidesGitWorkflowRoute: DocsGuidesGitWorkflowRoute,
  DocsGuidesMigrationsRoute: DocsGuidesMigrationsRoute,
  DocsGuidesTestingRoute: DocsGuidesTestingRoute,
  DocsGuidesTroubleshootingRoute: DocsGuidesTroubleshootingRoute,
  DocsLearnArchitectureRoute: DocsLearnArchitectureRoute,
  DocsLearnAuthenticationRoute: DocsLearnAuthenticationRoute,
  DocsLearnCachingRoute: DocsLearnCachingRoute,
  DocsLearnDatabaseRoute: DocsLearnDatabaseRoute,
  DocsLearnFrontendRoute: DocsLearnFrontendRoute,
  DocsLearnRestApiRoute: DocsLearnRestApiRoute,
  DocsLearnTestingRoute: DocsLearnTestingRoute,
  DocsReferenceAdrRoute: DocsReferenceAdrRoute,
  DocsReferenceApiRoute: DocsReferenceApiRoute,
  DocsReferenceConfigRoute: DocsReferenceConfigRoute,
  DocsReferencePatternsRoute: DocsReferencePatternsRoute,
  DocsReferenceStandardsRoute: DocsReferenceStandardsRoute,
  DocsToolsApiPlaygroundRoute: DocsToolsApiPlaygroundRoute,
  DocsToolsMonitoringRoute: DocsToolsMonitoringRoute,
  DocsToolsScaffoldingRoute: DocsToolsScaffoldingRoute,
  DocsGuidesIndexRoute: DocsGuidesIndexRoute,
  DocsLearnIndexRoute: DocsLearnIndexRoute,
  DocsReferenceIndexRoute: DocsReferenceIndexRoute,
  DocsToolsIndexRoute: DocsToolsIndexRoute,
}

const DocsRouteWithChildren = DocsRoute._addFileChildren(DocsRouteChildren)

interface PathlessLayoutNestedLayoutRouteChildren {
  PathlessLayoutNestedLayoutRouteARoute: typeof PathlessLayoutNestedLayoutRouteARoute
  PathlessLayoutNestedLayoutRouteBRoute: typeof PathlessLayoutNestedLayoutRouteBRoute
}

const PathlessLayoutNestedLayoutRouteChildren: PathlessLayoutNestedLayoutRouteChildren =
  {
    PathlessLayoutNestedLayoutRouteARoute:
      PathlessLayoutNestedLayoutRouteARoute,
    PathlessLayoutNestedLayoutRouteBRoute:
      PathlessLayoutNestedLayoutRouteBRoute,
  }

const PathlessLayoutNestedLayoutRouteWithChildren =
  PathlessLayoutNestedLayoutRoute._addFileChildren(
    PathlessLayoutNestedLayoutRouteChildren,
  )

interface ApiUsersServerRouteChildren {
  ApiUsersUserIdServerRoute: typeof ApiUsersUserIdServerRoute
}

const ApiUsersServerRouteChildren: ApiUsersServerRouteChildren = {
  ApiUsersUserIdServerRoute: ApiUsersUserIdServerRoute,
}

const ApiUsersServerRouteWithChildren = ApiUsersServerRoute._addFileChildren(
  ApiUsersServerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  DocsRoute: DocsRouteWithChildren,
  PathlessLayoutNestedLayoutRoute: PathlessLayoutNestedLayoutRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiUsersServerRoute: ApiUsersServerRouteWithChildren,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
