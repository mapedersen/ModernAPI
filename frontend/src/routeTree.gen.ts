/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as WelcomeRouteImport } from './routes/welcome'
import { Route as UsersRouteImport } from './routes/users'
import { Route as RedirectRouteImport } from './routes/redirect'
import { Route as PostsRouteImport } from './routes/posts'
import { Route as HandbookRouteImport } from './routes/handbook'
import { Route as DeferredRouteImport } from './routes/deferred'
import { Route as PathlessLayoutRouteImport } from './routes/_pathlessLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersIndexRouteImport } from './routes/users.index'
import { Route as ToolsIndexRouteImport } from './routes/tools/index'
import { Route as ReferenceIndexRouteImport } from './routes/reference/index'
import { Route as PostsIndexRouteImport } from './routes/posts.index'
import { Route as LearnIndexRouteImport } from './routes/learn/index'
import { Route as GuidesIndexRouteImport } from './routes/guides/index'
import { Route as UsersUserIdRouteImport } from './routes/users.$userId'
import { Route as ToolsScaffoldingRouteImport } from './routes/tools/scaffolding'
import { Route as ToolsMonitoringRouteImport } from './routes/tools/monitoring'
import { Route as ToolsApiPlaygroundRouteImport } from './routes/tools/api-playground'
import { Route as ReferenceStandardsRouteImport } from './routes/reference/standards'
import { Route as ReferencePatternsRouteImport } from './routes/reference/patterns'
import { Route as ReferenceConfigRouteImport } from './routes/reference/config'
import { Route as ReferenceApiRouteImport } from './routes/reference/api'
import { Route as ReferenceAdrRouteImport } from './routes/reference/adr'
import { Route as PostsPostIdRouteImport } from './routes/posts.$postId'
import { Route as LearnTestingRouteImport } from './routes/learn/testing'
import { Route as LearnRestApiRouteImport } from './routes/learn/rest-api'
import { Route as LearnFrontendRouteImport } from './routes/learn/frontend'
import { Route as LearnDatabaseRouteImport } from './routes/learn/database'
import { Route as LearnCachingRouteImport } from './routes/learn/caching'
import { Route as LearnAuthenticationRouteImport } from './routes/learn/authentication'
import { Route as LearnArchitectureRouteImport } from './routes/learn/architecture'
import { Route as GuidesTroubleshootingRouteImport } from './routes/guides/troubleshooting'
import { Route as GuidesTestingRouteImport } from './routes/guides/testing'
import { Route as GuidesMigrationsRouteImport } from './routes/guides/migrations'
import { Route as GuidesGitWorkflowRouteImport } from './routes/guides/git-workflow'
import { Route as GuidesDeploymentRouteImport } from './routes/guides/deployment'
import { Route as GuidesCustomizationRouteImport } from './routes/guides/customization'
import { Route as GuidesAddEntityRouteImport } from './routes/guides/add-entity'
import { Route as GuidesAddEndpointRouteImport } from './routes/guides/add-endpoint'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as PathlessLayoutNestedLayoutRouteImport } from './routes/_pathlessLayout/_nested-layout'
import { Route as PostsPostIdDeepRouteImport } from './routes/posts_.$postId.deep'
import { Route as PathlessLayoutNestedLayoutRouteBRouteImport } from './routes/_pathlessLayout/_nested-layout/route-b'
import { Route as PathlessLayoutNestedLayoutRouteARouteImport } from './routes/_pathlessLayout/_nested-layout/route-a'
import { ServerRoute as CustomScriptDotjsServerRouteImport } from './routes/customScript[.]js'
import { ServerRoute as ApiUsersServerRouteImport } from './routes/api/users'
import { ServerRoute as ApiUsersUserIdServerRouteImport } from './routes/api/users.$userId'

const rootServerRouteImport = createServerRootRoute()

const WelcomeRoute = WelcomeRouteImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any)
const RedirectRoute = RedirectRouteImport.update({
  id: '/redirect',
  path: '/redirect',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsRoute = PostsRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any)
const HandbookRoute = HandbookRouteImport.update({
  id: '/handbook',
  path: '/handbook',
  getParentRoute: () => rootRouteImport,
} as any)
const DeferredRoute = DeferredRouteImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutRoute = PathlessLayoutRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIndexRoute = UsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UsersRoute,
} as any)
const ToolsIndexRoute = ToolsIndexRouteImport.update({
  id: '/tools/',
  path: '/tools/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferenceIndexRoute = ReferenceIndexRouteImport.update({
  id: '/reference/',
  path: '/reference/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRoute,
} as any)
const LearnIndexRoute = LearnIndexRouteImport.update({
  id: '/learn/',
  path: '/learn/',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesIndexRoute = GuidesIndexRouteImport.update({
  id: '/guides/',
  path: '/guides/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersUserIdRoute = UsersUserIdRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => UsersRoute,
} as any)
const ToolsScaffoldingRoute = ToolsScaffoldingRouteImport.update({
  id: '/tools/scaffolding',
  path: '/tools/scaffolding',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsMonitoringRoute = ToolsMonitoringRouteImport.update({
  id: '/tools/monitoring',
  path: '/tools/monitoring',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsApiPlaygroundRoute = ToolsApiPlaygroundRouteImport.update({
  id: '/tools/api-playground',
  path: '/tools/api-playground',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferenceStandardsRoute = ReferenceStandardsRouteImport.update({
  id: '/reference/standards',
  path: '/reference/standards',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferencePatternsRoute = ReferencePatternsRouteImport.update({
  id: '/reference/patterns',
  path: '/reference/patterns',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferenceConfigRoute = ReferenceConfigRouteImport.update({
  id: '/reference/config',
  path: '/reference/config',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferenceApiRoute = ReferenceApiRouteImport.update({
  id: '/reference/api',
  path: '/reference/api',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferenceAdrRoute = ReferenceAdrRouteImport.update({
  id: '/reference/adr',
  path: '/reference/adr',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsPostIdRoute = PostsPostIdRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRoute,
} as any)
const LearnTestingRoute = LearnTestingRouteImport.update({
  id: '/learn/testing',
  path: '/learn/testing',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnRestApiRoute = LearnRestApiRouteImport.update({
  id: '/learn/rest-api',
  path: '/learn/rest-api',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnFrontendRoute = LearnFrontendRouteImport.update({
  id: '/learn/frontend',
  path: '/learn/frontend',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnDatabaseRoute = LearnDatabaseRouteImport.update({
  id: '/learn/database',
  path: '/learn/database',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnCachingRoute = LearnCachingRouteImport.update({
  id: '/learn/caching',
  path: '/learn/caching',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnAuthenticationRoute = LearnAuthenticationRouteImport.update({
  id: '/learn/authentication',
  path: '/learn/authentication',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnArchitectureRoute = LearnArchitectureRouteImport.update({
  id: '/learn/architecture',
  path: '/learn/architecture',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesTroubleshootingRoute = GuidesTroubleshootingRouteImport.update({
  id: '/guides/troubleshooting',
  path: '/guides/troubleshooting',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesTestingRoute = GuidesTestingRouteImport.update({
  id: '/guides/testing',
  path: '/guides/testing',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesMigrationsRoute = GuidesMigrationsRouteImport.update({
  id: '/guides/migrations',
  path: '/guides/migrations',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesGitWorkflowRoute = GuidesGitWorkflowRouteImport.update({
  id: '/guides/git-workflow',
  path: '/guides/git-workflow',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesDeploymentRoute = GuidesDeploymentRouteImport.update({
  id: '/guides/deployment',
  path: '/guides/deployment',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesCustomizationRoute = GuidesCustomizationRouteImport.update({
  id: '/guides/customization',
  path: '/guides/customization',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesAddEntityRoute = GuidesAddEntityRouteImport.update({
  id: '/guides/add-entity',
  path: '/guides/add-entity',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesAddEndpointRoute = GuidesAddEndpointRouteImport.update({
  id: '/guides/add-endpoint',
  path: '/guides/add-endpoint',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutNestedLayoutRoute =
  PathlessLayoutNestedLayoutRouteImport.update({
    id: '/_nested-layout',
    getParentRoute: () => PathlessLayoutRoute,
  } as any)
const PostsPostIdDeepRoute = PostsPostIdDeepRouteImport.update({
  id: '/posts_/$postId/deep',
  path: '/posts/$postId/deep',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutNestedLayoutRouteBRoute =
  PathlessLayoutNestedLayoutRouteBRouteImport.update({
    id: '/route-b',
    path: '/route-b',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)
const PathlessLayoutNestedLayoutRouteARoute =
  PathlessLayoutNestedLayoutRouteARouteImport.update({
    id: '/route-a',
    path: '/route-a',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)
const CustomScriptDotjsServerRoute = CustomScriptDotjsServerRouteImport.update({
  id: '/customScript.js',
  path: '/customScript.js',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersServerRoute = ApiUsersServerRouteImport.update({
  id: '/api/users',
  path: '/api/users',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersUserIdServerRoute = ApiUsersUserIdServerRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => ApiUsersServerRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/deferred': typeof DeferredRoute
  '/handbook': typeof HandbookRoute
  '/posts': typeof PostsRouteWithChildren
  '/redirect': typeof RedirectRoute
  '/users': typeof UsersRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/guides/add-endpoint': typeof GuidesAddEndpointRoute
  '/guides/add-entity': typeof GuidesAddEntityRoute
  '/guides/customization': typeof GuidesCustomizationRoute
  '/guides/deployment': typeof GuidesDeploymentRoute
  '/guides/git-workflow': typeof GuidesGitWorkflowRoute
  '/guides/migrations': typeof GuidesMigrationsRoute
  '/guides/testing': typeof GuidesTestingRoute
  '/guides/troubleshooting': typeof GuidesTroubleshootingRoute
  '/learn/architecture': typeof LearnArchitectureRoute
  '/learn/authentication': typeof LearnAuthenticationRoute
  '/learn/caching': typeof LearnCachingRoute
  '/learn/database': typeof LearnDatabaseRoute
  '/learn/frontend': typeof LearnFrontendRoute
  '/learn/rest-api': typeof LearnRestApiRoute
  '/learn/testing': typeof LearnTestingRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/reference/adr': typeof ReferenceAdrRoute
  '/reference/api': typeof ReferenceApiRoute
  '/reference/config': typeof ReferenceConfigRoute
  '/reference/patterns': typeof ReferencePatternsRoute
  '/reference/standards': typeof ReferenceStandardsRoute
  '/tools/api-playground': typeof ToolsApiPlaygroundRoute
  '/tools/monitoring': typeof ToolsMonitoringRoute
  '/tools/scaffolding': typeof ToolsScaffoldingRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/guides': typeof GuidesIndexRoute
  '/learn': typeof LearnIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/reference': typeof ReferenceIndexRoute
  '/tools': typeof ToolsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/deferred': typeof DeferredRoute
  '/handbook': typeof HandbookRoute
  '/redirect': typeof RedirectRoute
  '/welcome': typeof WelcomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/guides/add-endpoint': typeof GuidesAddEndpointRoute
  '/guides/add-entity': typeof GuidesAddEntityRoute
  '/guides/customization': typeof GuidesCustomizationRoute
  '/guides/deployment': typeof GuidesDeploymentRoute
  '/guides/git-workflow': typeof GuidesGitWorkflowRoute
  '/guides/migrations': typeof GuidesMigrationsRoute
  '/guides/testing': typeof GuidesTestingRoute
  '/guides/troubleshooting': typeof GuidesTroubleshootingRoute
  '/learn/architecture': typeof LearnArchitectureRoute
  '/learn/authentication': typeof LearnAuthenticationRoute
  '/learn/caching': typeof LearnCachingRoute
  '/learn/database': typeof LearnDatabaseRoute
  '/learn/frontend': typeof LearnFrontendRoute
  '/learn/rest-api': typeof LearnRestApiRoute
  '/learn/testing': typeof LearnTestingRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/reference/adr': typeof ReferenceAdrRoute
  '/reference/api': typeof ReferenceApiRoute
  '/reference/config': typeof ReferenceConfigRoute
  '/reference/patterns': typeof ReferencePatternsRoute
  '/reference/standards': typeof ReferenceStandardsRoute
  '/tools/api-playground': typeof ToolsApiPlaygroundRoute
  '/tools/monitoring': typeof ToolsMonitoringRoute
  '/tools/scaffolding': typeof ToolsScaffoldingRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/guides': typeof GuidesIndexRoute
  '/learn': typeof LearnIndexRoute
  '/posts': typeof PostsIndexRoute
  '/reference': typeof ReferenceIndexRoute
  '/tools': typeof ToolsIndexRoute
  '/users': typeof UsersIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_pathlessLayout': typeof PathlessLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/handbook': typeof HandbookRoute
  '/posts': typeof PostsRouteWithChildren
  '/redirect': typeof RedirectRoute
  '/users': typeof UsersRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/_pathlessLayout/_nested-layout': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/guides/add-endpoint': typeof GuidesAddEndpointRoute
  '/guides/add-entity': typeof GuidesAddEntityRoute
  '/guides/customization': typeof GuidesCustomizationRoute
  '/guides/deployment': typeof GuidesDeploymentRoute
  '/guides/git-workflow': typeof GuidesGitWorkflowRoute
  '/guides/migrations': typeof GuidesMigrationsRoute
  '/guides/testing': typeof GuidesTestingRoute
  '/guides/troubleshooting': typeof GuidesTroubleshootingRoute
  '/learn/architecture': typeof LearnArchitectureRoute
  '/learn/authentication': typeof LearnAuthenticationRoute
  '/learn/caching': typeof LearnCachingRoute
  '/learn/database': typeof LearnDatabaseRoute
  '/learn/frontend': typeof LearnFrontendRoute
  '/learn/rest-api': typeof LearnRestApiRoute
  '/learn/testing': typeof LearnTestingRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/reference/adr': typeof ReferenceAdrRoute
  '/reference/api': typeof ReferenceApiRoute
  '/reference/config': typeof ReferenceConfigRoute
  '/reference/patterns': typeof ReferencePatternsRoute
  '/reference/standards': typeof ReferenceStandardsRoute
  '/tools/api-playground': typeof ToolsApiPlaygroundRoute
  '/tools/monitoring': typeof ToolsMonitoringRoute
  '/tools/scaffolding': typeof ToolsScaffoldingRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/guides/': typeof GuidesIndexRoute
  '/learn/': typeof LearnIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/reference/': typeof ReferenceIndexRoute
  '/tools/': typeof ToolsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/_pathlessLayout/_nested-layout/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/_pathlessLayout/_nested-layout/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/posts_/$postId/deep': typeof PostsPostIdDeepRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/deferred'
    | '/handbook'
    | '/posts'
    | '/redirect'
    | '/users'
    | '/welcome'
    | '/auth/login'
    | '/guides/add-endpoint'
    | '/guides/add-entity'
    | '/guides/customization'
    | '/guides/deployment'
    | '/guides/git-workflow'
    | '/guides/migrations'
    | '/guides/testing'
    | '/guides/troubleshooting'
    | '/learn/architecture'
    | '/learn/authentication'
    | '/learn/caching'
    | '/learn/database'
    | '/learn/frontend'
    | '/learn/rest-api'
    | '/learn/testing'
    | '/posts/$postId'
    | '/reference/adr'
    | '/reference/api'
    | '/reference/config'
    | '/reference/patterns'
    | '/reference/standards'
    | '/tools/api-playground'
    | '/tools/monitoring'
    | '/tools/scaffolding'
    | '/users/$userId'
    | '/guides'
    | '/learn'
    | '/posts/'
    | '/reference'
    | '/tools'
    | '/users/'
    | '/route-a'
    | '/route-b'
    | '/posts/$postId/deep'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/deferred'
    | '/handbook'
    | '/redirect'
    | '/welcome'
    | '/auth/login'
    | '/guides/add-endpoint'
    | '/guides/add-entity'
    | '/guides/customization'
    | '/guides/deployment'
    | '/guides/git-workflow'
    | '/guides/migrations'
    | '/guides/testing'
    | '/guides/troubleshooting'
    | '/learn/architecture'
    | '/learn/authentication'
    | '/learn/caching'
    | '/learn/database'
    | '/learn/frontend'
    | '/learn/rest-api'
    | '/learn/testing'
    | '/posts/$postId'
    | '/reference/adr'
    | '/reference/api'
    | '/reference/config'
    | '/reference/patterns'
    | '/reference/standards'
    | '/tools/api-playground'
    | '/tools/monitoring'
    | '/tools/scaffolding'
    | '/users/$userId'
    | '/guides'
    | '/learn'
    | '/posts'
    | '/reference'
    | '/tools'
    | '/users'
    | '/route-a'
    | '/route-b'
    | '/posts/$postId/deep'
  id:
    | '__root__'
    | '/'
    | '/_pathlessLayout'
    | '/deferred'
    | '/handbook'
    | '/posts'
    | '/redirect'
    | '/users'
    | '/welcome'
    | '/_pathlessLayout/_nested-layout'
    | '/auth/login'
    | '/guides/add-endpoint'
    | '/guides/add-entity'
    | '/guides/customization'
    | '/guides/deployment'
    | '/guides/git-workflow'
    | '/guides/migrations'
    | '/guides/testing'
    | '/guides/troubleshooting'
    | '/learn/architecture'
    | '/learn/authentication'
    | '/learn/caching'
    | '/learn/database'
    | '/learn/frontend'
    | '/learn/rest-api'
    | '/learn/testing'
    | '/posts/$postId'
    | '/reference/adr'
    | '/reference/api'
    | '/reference/config'
    | '/reference/patterns'
    | '/reference/standards'
    | '/tools/api-playground'
    | '/tools/monitoring'
    | '/tools/scaffolding'
    | '/users/$userId'
    | '/guides/'
    | '/learn/'
    | '/posts/'
    | '/reference/'
    | '/tools/'
    | '/users/'
    | '/_pathlessLayout/_nested-layout/route-a'
    | '/_pathlessLayout/_nested-layout/route-b'
    | '/posts_/$postId/deep'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PathlessLayoutRoute: typeof PathlessLayoutRouteWithChildren
  DeferredRoute: typeof DeferredRoute
  HandbookRoute: typeof HandbookRoute
  PostsRoute: typeof PostsRouteWithChildren
  RedirectRoute: typeof RedirectRoute
  UsersRoute: typeof UsersRouteWithChildren
  WelcomeRoute: typeof WelcomeRoute
  AuthLoginRoute: typeof AuthLoginRoute
  GuidesAddEndpointRoute: typeof GuidesAddEndpointRoute
  GuidesAddEntityRoute: typeof GuidesAddEntityRoute
  GuidesCustomizationRoute: typeof GuidesCustomizationRoute
  GuidesDeploymentRoute: typeof GuidesDeploymentRoute
  GuidesGitWorkflowRoute: typeof GuidesGitWorkflowRoute
  GuidesMigrationsRoute: typeof GuidesMigrationsRoute
  GuidesTestingRoute: typeof GuidesTestingRoute
  GuidesTroubleshootingRoute: typeof GuidesTroubleshootingRoute
  LearnArchitectureRoute: typeof LearnArchitectureRoute
  LearnAuthenticationRoute: typeof LearnAuthenticationRoute
  LearnCachingRoute: typeof LearnCachingRoute
  LearnDatabaseRoute: typeof LearnDatabaseRoute
  LearnFrontendRoute: typeof LearnFrontendRoute
  LearnRestApiRoute: typeof LearnRestApiRoute
  LearnTestingRoute: typeof LearnTestingRoute
  ReferenceAdrRoute: typeof ReferenceAdrRoute
  ReferenceApiRoute: typeof ReferenceApiRoute
  ReferenceConfigRoute: typeof ReferenceConfigRoute
  ReferencePatternsRoute: typeof ReferencePatternsRoute
  ReferenceStandardsRoute: typeof ReferenceStandardsRoute
  ToolsApiPlaygroundRoute: typeof ToolsApiPlaygroundRoute
  ToolsMonitoringRoute: typeof ToolsMonitoringRoute
  ToolsScaffoldingRoute: typeof ToolsScaffoldingRoute
  GuidesIndexRoute: typeof GuidesIndexRoute
  LearnIndexRoute: typeof LearnIndexRoute
  ReferenceIndexRoute: typeof ReferenceIndexRoute
  ToolsIndexRoute: typeof ToolsIndexRoute
  PostsPostIdDeepRoute: typeof PostsPostIdDeepRoute
}
export interface FileServerRoutesByFullPath {
  '/customScript.js': typeof CustomScriptDotjsServerRoute
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesByTo {
  '/customScript.js': typeof CustomScriptDotjsServerRoute
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/customScript.js': typeof CustomScriptDotjsServerRoute
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/customScript.js' | '/api/users' | '/api/users/$userId'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/customScript.js' | '/api/users' | '/api/users/$userId'
  id: '__root__' | '/customScript.js' | '/api/users' | '/api/users/$userId'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  CustomScriptDotjsServerRoute: typeof CustomScriptDotjsServerRoute
  ApiUsersServerRoute: typeof ApiUsersServerRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/redirect': {
      id: '/redirect'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: typeof RedirectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/handbook': {
      id: '/handbook'
      path: '/handbook'
      fullPath: '/handbook'
      preLoaderRoute: typeof HandbookRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof DeferredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/': {
      id: '/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof UsersIndexRouteImport
      parentRoute: typeof UsersRoute
    }
    '/tools/': {
      id: '/tools/'
      path: '/tools'
      fullPath: '/tools'
      preLoaderRoute: typeof ToolsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reference/': {
      id: '/reference/'
      path: '/reference'
      fullPath: '/reference'
      preLoaderRoute: typeof ReferenceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof PostsRoute
    }
    '/learn/': {
      id: '/learn/'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LearnIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/': {
      id: '/guides/'
      path: '/guides'
      fullPath: '/guides'
      preLoaderRoute: typeof GuidesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$userId': {
      id: '/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdRouteImport
      parentRoute: typeof UsersRoute
    }
    '/tools/scaffolding': {
      id: '/tools/scaffolding'
      path: '/tools/scaffolding'
      fullPath: '/tools/scaffolding'
      preLoaderRoute: typeof ToolsScaffoldingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/monitoring': {
      id: '/tools/monitoring'
      path: '/tools/monitoring'
      fullPath: '/tools/monitoring'
      preLoaderRoute: typeof ToolsMonitoringRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/api-playground': {
      id: '/tools/api-playground'
      path: '/tools/api-playground'
      fullPath: '/tools/api-playground'
      preLoaderRoute: typeof ToolsApiPlaygroundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reference/standards': {
      id: '/reference/standards'
      path: '/reference/standards'
      fullPath: '/reference/standards'
      preLoaderRoute: typeof ReferenceStandardsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reference/patterns': {
      id: '/reference/patterns'
      path: '/reference/patterns'
      fullPath: '/reference/patterns'
      preLoaderRoute: typeof ReferencePatternsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reference/config': {
      id: '/reference/config'
      path: '/reference/config'
      fullPath: '/reference/config'
      preLoaderRoute: typeof ReferenceConfigRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reference/api': {
      id: '/reference/api'
      path: '/reference/api'
      fullPath: '/reference/api'
      preLoaderRoute: typeof ReferenceApiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reference/adr': {
      id: '/reference/adr'
      path: '/reference/adr'
      fullPath: '/reference/adr'
      preLoaderRoute: typeof ReferenceAdrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof PostsRoute
    }
    '/learn/testing': {
      id: '/learn/testing'
      path: '/learn/testing'
      fullPath: '/learn/testing'
      preLoaderRoute: typeof LearnTestingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/rest-api': {
      id: '/learn/rest-api'
      path: '/learn/rest-api'
      fullPath: '/learn/rest-api'
      preLoaderRoute: typeof LearnRestApiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/frontend': {
      id: '/learn/frontend'
      path: '/learn/frontend'
      fullPath: '/learn/frontend'
      preLoaderRoute: typeof LearnFrontendRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/database': {
      id: '/learn/database'
      path: '/learn/database'
      fullPath: '/learn/database'
      preLoaderRoute: typeof LearnDatabaseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/caching': {
      id: '/learn/caching'
      path: '/learn/caching'
      fullPath: '/learn/caching'
      preLoaderRoute: typeof LearnCachingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/authentication': {
      id: '/learn/authentication'
      path: '/learn/authentication'
      fullPath: '/learn/authentication'
      preLoaderRoute: typeof LearnAuthenticationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/architecture': {
      id: '/learn/architecture'
      path: '/learn/architecture'
      fullPath: '/learn/architecture'
      preLoaderRoute: typeof LearnArchitectureRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/troubleshooting': {
      id: '/guides/troubleshooting'
      path: '/guides/troubleshooting'
      fullPath: '/guides/troubleshooting'
      preLoaderRoute: typeof GuidesTroubleshootingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/testing': {
      id: '/guides/testing'
      path: '/guides/testing'
      fullPath: '/guides/testing'
      preLoaderRoute: typeof GuidesTestingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/migrations': {
      id: '/guides/migrations'
      path: '/guides/migrations'
      fullPath: '/guides/migrations'
      preLoaderRoute: typeof GuidesMigrationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/git-workflow': {
      id: '/guides/git-workflow'
      path: '/guides/git-workflow'
      fullPath: '/guides/git-workflow'
      preLoaderRoute: typeof GuidesGitWorkflowRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/deployment': {
      id: '/guides/deployment'
      path: '/guides/deployment'
      fullPath: '/guides/deployment'
      preLoaderRoute: typeof GuidesDeploymentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/customization': {
      id: '/guides/customization'
      path: '/guides/customization'
      fullPath: '/guides/customization'
      preLoaderRoute: typeof GuidesCustomizationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/add-entity': {
      id: '/guides/add-entity'
      path: '/guides/add-entity'
      fullPath: '/guides/add-entity'
      preLoaderRoute: typeof GuidesAddEntityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/add-endpoint': {
      id: '/guides/add-endpoint'
      path: '/guides/add-endpoint'
      fullPath: '/guides/add-endpoint'
      preLoaderRoute: typeof GuidesAddEndpointRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/_nested-layout': {
      id: '/_pathlessLayout/_nested-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteImport
      parentRoute: typeof PathlessLayoutRoute
    }
    '/posts_/$postId/deep': {
      id: '/posts_/$postId/deep'
      path: '/posts/$postId/deep'
      fullPath: '/posts/$postId/deep'
      preLoaderRoute: typeof PostsPostIdDeepRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/_nested-layout/route-b': {
      id: '/_pathlessLayout/_nested-layout/route-b'
      path: '/route-b'
      fullPath: '/route-b'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteBRouteImport
      parentRoute: typeof PathlessLayoutNestedLayoutRoute
    }
    '/_pathlessLayout/_nested-layout/route-a': {
      id: '/_pathlessLayout/_nested-layout/route-a'
      path: '/route-a'
      fullPath: '/route-a'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteARouteImport
      parentRoute: typeof PathlessLayoutNestedLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/customScript.js': {
      id: '/customScript.js'
      path: '/customScript.js'
      fullPath: '/customScript.js'
      preLoaderRoute: typeof CustomScriptDotjsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users': {
      id: '/api/users'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/$userId': {
      id: '/api/users/$userId'
      path: '/$userId'
      fullPath: '/api/users/$userId'
      preLoaderRoute: typeof ApiUsersUserIdServerRouteImport
      parentRoute: typeof ApiUsersServerRoute
    }
  }
}

interface PathlessLayoutNestedLayoutRouteChildren {
  PathlessLayoutNestedLayoutRouteARoute: typeof PathlessLayoutNestedLayoutRouteARoute
  PathlessLayoutNestedLayoutRouteBRoute: typeof PathlessLayoutNestedLayoutRouteBRoute
}

const PathlessLayoutNestedLayoutRouteChildren: PathlessLayoutNestedLayoutRouteChildren =
  {
    PathlessLayoutNestedLayoutRouteARoute:
      PathlessLayoutNestedLayoutRouteARoute,
    PathlessLayoutNestedLayoutRouteBRoute:
      PathlessLayoutNestedLayoutRouteBRoute,
  }

const PathlessLayoutNestedLayoutRouteWithChildren =
  PathlessLayoutNestedLayoutRoute._addFileChildren(
    PathlessLayoutNestedLayoutRouteChildren,
  )

interface PathlessLayoutRouteChildren {
  PathlessLayoutNestedLayoutRoute: typeof PathlessLayoutNestedLayoutRouteWithChildren
}

const PathlessLayoutRouteChildren: PathlessLayoutRouteChildren = {
  PathlessLayoutNestedLayoutRoute: PathlessLayoutNestedLayoutRouteWithChildren,
}

const PathlessLayoutRouteWithChildren = PathlessLayoutRoute._addFileChildren(
  PathlessLayoutRouteChildren,
)

interface PostsRouteChildren {
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const PostsRouteChildren: PostsRouteChildren = {
  PostsPostIdRoute: PostsPostIdRoute,
  PostsIndexRoute: PostsIndexRoute,
}

const PostsRouteWithChildren = PostsRoute._addFileChildren(PostsRouteChildren)

interface UsersRouteChildren {
  UsersUserIdRoute: typeof UsersUserIdRoute
  UsersIndexRoute: typeof UsersIndexRoute
}

const UsersRouteChildren: UsersRouteChildren = {
  UsersUserIdRoute: UsersUserIdRoute,
  UsersIndexRoute: UsersIndexRoute,
}

const UsersRouteWithChildren = UsersRoute._addFileChildren(UsersRouteChildren)

interface ApiUsersServerRouteChildren {
  ApiUsersUserIdServerRoute: typeof ApiUsersUserIdServerRoute
}

const ApiUsersServerRouteChildren: ApiUsersServerRouteChildren = {
  ApiUsersUserIdServerRoute: ApiUsersUserIdServerRoute,
}

const ApiUsersServerRouteWithChildren = ApiUsersServerRoute._addFileChildren(
  ApiUsersServerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PathlessLayoutRoute: PathlessLayoutRouteWithChildren,
  DeferredRoute: DeferredRoute,
  HandbookRoute: HandbookRoute,
  PostsRoute: PostsRouteWithChildren,
  RedirectRoute: RedirectRoute,
  UsersRoute: UsersRouteWithChildren,
  WelcomeRoute: WelcomeRoute,
  AuthLoginRoute: AuthLoginRoute,
  GuidesAddEndpointRoute: GuidesAddEndpointRoute,
  GuidesAddEntityRoute: GuidesAddEntityRoute,
  GuidesCustomizationRoute: GuidesCustomizationRoute,
  GuidesDeploymentRoute: GuidesDeploymentRoute,
  GuidesGitWorkflowRoute: GuidesGitWorkflowRoute,
  GuidesMigrationsRoute: GuidesMigrationsRoute,
  GuidesTestingRoute: GuidesTestingRoute,
  GuidesTroubleshootingRoute: GuidesTroubleshootingRoute,
  LearnArchitectureRoute: LearnArchitectureRoute,
  LearnAuthenticationRoute: LearnAuthenticationRoute,
  LearnCachingRoute: LearnCachingRoute,
  LearnDatabaseRoute: LearnDatabaseRoute,
  LearnFrontendRoute: LearnFrontendRoute,
  LearnRestApiRoute: LearnRestApiRoute,
  LearnTestingRoute: LearnTestingRoute,
  ReferenceAdrRoute: ReferenceAdrRoute,
  ReferenceApiRoute: ReferenceApiRoute,
  ReferenceConfigRoute: ReferenceConfigRoute,
  ReferencePatternsRoute: ReferencePatternsRoute,
  ReferenceStandardsRoute: ReferenceStandardsRoute,
  ToolsApiPlaygroundRoute: ToolsApiPlaygroundRoute,
  ToolsMonitoringRoute: ToolsMonitoringRoute,
  ToolsScaffoldingRoute: ToolsScaffoldingRoute,
  GuidesIndexRoute: GuidesIndexRoute,
  LearnIndexRoute: LearnIndexRoute,
  ReferenceIndexRoute: ReferenceIndexRoute,
  ToolsIndexRoute: ToolsIndexRoute,
  PostsPostIdDeepRoute: PostsPostIdDeepRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  CustomScriptDotjsServerRoute: CustomScriptDotjsServerRoute,
  ApiUsersServerRoute: ApiUsersServerRouteWithChildren,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
