# CODEOWNERS file for ModernAPI
# This file defines who should review PRs for different parts of the codebase
# See: https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners

# =============================================================================
# Global Ownership
# =============================================================================

# Default reviewers for all files
* @tech-lead @senior-dev

# =============================================================================
# Core Application Code
# =============================================================================

# Domain Layer - Core business logic
ModernAPI.Domain/ @domain-architect @tech-lead

# Application Layer - Use cases and application services  
ModernAPI.Application/ @application-architect @tech-lead

# Infrastructure Layer - Data access and external services
ModernAPI.Infrastructure/ @infrastructure-dev @database-admin

# API Layer - Controllers and HTTP concerns
ModernAPI.API/ @api-dev @tech-lead

# =============================================================================
# Security & Authentication
# =============================================================================

# Authentication and authorization code
ModernAPI.Application/Services/AuthService.cs @security-team @tech-lead
ModernAPI.API/Controllers/AuthController.cs @security-team @tech-lead
ModernAPI.Infrastructure/Identity/ @security-team @infrastructure-dev

# JWT and token management
**/JwtToken* @security-team
**/RefreshToken* @security-team

# =============================================================================
# Configuration & Environment
# =============================================================================

# Environment configuration files
.env* @devops-team @tech-lead
appsettings*.json @devops-team @tech-lead
Program.cs @tech-lead @senior-dev

# =============================================================================
# Database & Migrations
# =============================================================================

# Entity Framework migrations
ModernAPI.Infrastructure/Data/Migrations/ @database-admin @infrastructure-dev

# Database configurations
ModernAPI.Infrastructure/Data/Configurations/ @database-admin @infrastructure-dev

# Database context
**/ApplicationDbContext.cs @database-admin @infrastructure-dev

# =============================================================================
# DevOps & Infrastructure
# =============================================================================

# Docker files
Dockerfile* @devops-team
docker-compose*.yml @devops-team
.dockerignore @devops-team

# Kubernetes manifests
k8s/ @devops-team @sre-team

# CI/CD pipelines
.github/workflows/ @devops-team @tech-lead

# Deployment scripts
scripts/ @devops-team @sre-team

# =============================================================================
# Monitoring & Observability
# =============================================================================

# Monitoring configuration
monitoring/ @sre-team @devops-team

# Logging configuration
**/Logging/ @sre-team
**/Serilog* @sre-team

# OpenTelemetry and metrics
**/OpenTelemetry* @sre-team
**/Metrics* @sre-team

# =============================================================================
# Testing
# =============================================================================

# All test files
tests/ @qa-team @tech-lead

# Integration tests (require infrastructure knowledge)
tests/ModernAPI.IntegrationTests/ @qa-team @infrastructure-dev

# API tests
tests/ModernAPI.API.Tests/ @qa-team @api-dev

# =============================================================================
# Documentation
# =============================================================================

# Main documentation files
README.md @tech-lead @product-owner
CHANGELOG.md @tech-lead
TODO.md @tech-lead @product-owner

# Technical documentation
docs/ @tech-lead @technical-writer

# API documentation
docs/API* @api-dev @technical-writer

# Architecture documentation
docs/*ARCHITECTURE* @domain-architect @tech-lead

# Security documentation
docs/*SECURITY* @security-team @tech-lead

# =============================================================================
# Package Management & Dependencies
# =============================================================================

# .NET project files
*.csproj @tech-lead
*.sln @tech-lead
global.json @tech-lead
Directory.Build.props @tech-lead

# Package configuration
package.json @tech-lead @devops-team
package-lock.json @tech-lead @devops-team

# =============================================================================
# Git & Repository Configuration
# =============================================================================

# Git configuration
.gitignore @tech-lead
.gitattributes @tech-lead
.gitmessage @tech-lead

# GitHub configuration
.github/ @tech-lead @devops-team

# Branch protection and repository settings require admin approval
.github/CODEOWNERS @admin @tech-lead

# =============================================================================
# Security Sensitive Files
# =============================================================================

# Security configuration requires security team approval
**/Security/ @security-team @tech-lead

# Authentication configuration
**/Authentication/ @security-team @tech-lead

# Certificate and key files
*.pem @security-team @devops-team
*.key @security-team @devops-team
*.p12 @security-team @devops-team

# =============================================================================
# Release & Versioning
# =============================================================================

# Release configuration
.releaserc.json @tech-lead @product-owner

# Semantic release configuration
**/semantic-release* @tech-lead @devops-team

# Version files
VERSION @tech-lead @product-owner

# =============================================================================
# Code Quality & Linting
# =============================================================================

# Code quality configuration
.editorconfig @tech-lead
commitlint.config.js @tech-lead
.prettierrc* @tech-lead

# Static analysis configuration
.sonarqube/ @tech-lead @qa-team

# =============================================================================
# Build & Compilation
# =============================================================================

# Build scripts
build/ @devops-team @tech-lead
*.cake @devops-team

# MSBuild files
*.targets @tech-lead
*.props @tech-lead

# =============================================================================
# Scaffolding & Code Generation
# =============================================================================

# Scaffolding tools
tools/ @tech-lead @senior-dev

# Code generation templates
tools/ModernAPI.Scaffolding/ @tech-lead @senior-dev

# =============================================================================
# Environment-Specific Overrides
# =============================================================================

# Production configuration requires additional approval
*production* @sre-team @security-team @tech-lead

# Staging configuration
*staging* @devops-team @qa-team

# Development configuration
*development* @tech-lead

# =============================================================================
# Emergency Contacts
# =============================================================================

# For critical security issues or production emergencies:
# - @security-team (security vulnerabilities)
# - @sre-team (production incidents)
# - @tech-lead (architectural decisions)
# - @admin (repository administration)

# Team aliases should be configured in GitHub:
# @tech-lead -> Lead developer(s)
# @senior-dev -> Senior developers
# @security-team -> Security specialists
# @devops-team -> DevOps engineers
# @sre-team -> Site reliability engineers
# @qa-team -> Quality assurance team
# @database-admin -> Database administrators
# @api-dev -> API developers
# @infrastructure-dev -> Infrastructure developers
# @domain-architect -> Domain/solution architects
# @application-architect -> Application architects
# @technical-writer -> Technical documentation team
# @product-owner -> Product management
# @admin -> Repository administrators