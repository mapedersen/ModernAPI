# Production Docker Compose Configuration
# Auto-generates environment variables from GitHub secrets during deployment

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: modernapi_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-modernapi_prod}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - modernapi_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-modernapi_prod}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: modernapi_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 64mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - modernapi_network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  # .NET API Backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: modernapi_api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=${DATABASE_CONNECTION}
      - Redis__ConnectionString=redis:6379,password=${REDIS_PASSWORD}
      - JWT__Secret=${JWT_SECRET}
      - JWT__Issuer=${JWT_ISSUER:-ModernAPI}
      - JWT__Audience=${JWT_AUDIENCE:-ModernAPI-Users}
      - JWT__ExpiryMinutes=${JWT_EXPIRY_MINUTES:-60}
      - CORS__AllowedOrigins=${CORS_ORIGINS:-https://modernapi.dev}
      - SMTP__Host=${SMTP_HOST}
      - SMTP__Port=${SMTP_PORT:-587}
      - SMTP__UseSSL=${SMTP_USE_SSL:-true}
      - SMTP__Username=${SMTP_USERNAME}
      - SMTP__Password=${SMTP_PASSWORD}
      - Email__FromEmail=${FROM_EMAIL}
      - Email__FromName=${FROM_NAME:-ModernAPI}
    ports:
      - "5001:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - modernapi_network
    deploy:
      resources:
        limits:
          memory: 384M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (TanStack Start with Bun SSR) - TEMPORARILY DISABLED FOR DEBUGGING
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #     args:
  #       - VITE_API_BASE_URL=${API_BASE_URL:-https://modernapi.dev}
  #   container_name: modernapi_frontend
  #   restart: unless-stopped
  #   environment:
  #     - NODE_ENV=production
  #     - PORT=3000
  #     - VITE_API_BASE_URL=${API_BASE_URL:-https://modernapi.dev}
  #   ports:
  #     - "3001:3000"
  #   networks:
  #     - modernapi_network
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 256M
  #       reservations:
  #         memory: 128M
  #   healthcheck:
  #     test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 3

networks:
  modernapi_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local